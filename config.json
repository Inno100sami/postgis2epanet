{
  "epsg": 4326,
  "epsg_utm": 32736,
  "prepare" : {
    "elevation" : [
      "update chamber set elevation = ST_Value(e.rast, 1, chamber.geom) FROM rwanda_dem_10m e where ST_Intersects(e.rast, chamber.geom);",
      "update pumping_station set elevation = ST_Value(e.rast, 1, pumping_station.geom) FROM rwanda_dem_10m e where ST_Intersects(e.rast, pumping_station.geom);",
      "update reservoir set elevation = ST_Value(e.rast, 1, reservoir.geom) FROM rwanda_dem_10m e where ST_Intersects(e.rast, reservoir.geom);",
      "update water_connection set elevation = ST_Value(e.rast, 1, water_connection.geom) FROM rwanda_dem_10m e where ST_Intersects(e.rast, water_connection.geom);",
      "update watersource set elevation = ST_Value(e.rast, 1, watersource.geom) FROM rwanda_dem_10m e where ST_Intersects(e.rast, watersource.geom);",
      "update wtp set elevation = ST_Value(e.rast, 1, wtp.geom) FROM rwanda_dem_10m e where ST_Intersects(e.rast, wtp.geom);",
      "update valve set elevation = ST_Value(e.rast, 1, valve.geom) FROM rwanda_dem_10m e where ST_Intersects(e.rast, valve.geom);"
    ],
    "wss" : ["SELECT wss_id, wss_name, dist_id, wss_type, status FROM wss"]
  },
  "junctions" : {
    "sql" : [
      " WITH points2d AS ",
      "(SELECT (ST_DumpPoints(geom)).geom AS geom FROM pipeline where wss_id={0}),",
      " cells AS ",
        "(SELECT p.geom AS geom, ST_Value(a.rast, 1, p.geom) AS alt, ST_X(geom) as lon, ST_Y(geom) as lat ",
        " FROM rwanda_dem_10m a RIGHT JOIN points2d p ON ST_Intersects(a.rast, p.geom)), ",
      " points3d AS ",
        " (SELECT ST_SetSRID(COALESCE(ST_MakePoint(lon, lat, alt), ST_MakePoint(lon, lat)), %epsg%) AS geom, lon, lat, alt FROM cells), ",
      " demands AS ",
        " (SELECT connection_id, geom, COALESCE(cast(no_user as float)*80/86400,0.0) as demand FROM water_connection WHERE wss_id={0}) ",
      " SELECT 'Node-' || row_number() over() as id,st_x(x.geom) as lon, st_y(x.geom) as lat, st_z(x.geom)as elevation, ",
      " st_x(st_transform(x.geom,32736)) as lon_utm, st_y(st_transform(x.geom,32736)) as lat_utm, COALESCE(y.demand, 0.0) as demand ",
      " FROM points3d x LEFT JOIN demands y ON x.geom && y.geom WHERE x.geom is not NULL"
    ]
  },
  "pipes" : {
    "sql" : [
      "SELECT 'Pipe-' || pipe_id as id, pipe_size as diameter, ST_AsGeoJSON(st_multi(geom)) as geojson FROM pipeline WHERE wss_id={0}"
    ]
  },
  "reservoirs": {
    "sql": [
      "SELECT source_type || '-' || watersource_id as id, st_x(geom) as lon, st_y(geom) as lat, elevation, source_type, ",
      "st_x(st_transform(geom,%epsg_utm%)) as lon_utm, st_y(st_transform(geom,%epsg_utm%)) as lat_utm ",
      "FROM watersource WHERE wss_id={0}"]
  },
  "tanks": {
    "sql" : [
      "SELECT 'Tank-' || reservoir_id as id, st_x(geom) as lon, st_y(geom) as lat, elevation, capacity, ",
      "0.75 as init_level, 0.15 as min_level, 1.5 as max_level, ",
      "st_x(st_transform(geom,%epsg_utm%)) as lon_utm, st_y(st_transform(geom,%epsg_utm%)) as lat_utm ",
      "FROM reservoir WHERE wss_id={0}"
    ]
  },
  "valves" : {
    "sql" : [
      "SELECT a.chamber_id as id, st_x(a.geom) as lon, st_y(a.geom) as lat, ",
      "a.elevation, max(b.pipe_size) as diameter, ",
      "case a.chamber_type when 'Valve chamber' then 'TCV' when 'PRV chamber' then 'PRV' END as valve_type ",
      "FROM chamber a INNER JOIN pipeline b ON st_intersects(a.geom, b.geom) ",
      "WHERE a.wss_id = {0} and a.chamber_type IN ('Valve chamber', 'PRV chamber') " ,
      "GROUP BY chamber_id, lon, lat, elevation "
    ]
  },
  "pumps" : {
    "sql" : [
      "SELECT 'Pump-' || pumpingstation_id as id, st_x(geom) as lon, st_y(geom) as lat, ",
      "elevation, head_pump as head, discharge_pump as discharge ",
      "FROM pumping_station WHERE wss_id={0}"
    ]
  }
}